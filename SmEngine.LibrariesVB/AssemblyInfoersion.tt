<#@ template language="vb"hostSpecific="True"#>
<#@ output extension="vb"#>
<#@ import namespace="System.IO"#>
<#
    dim revisionNumber as integer
    dim time as DateTime = DateTime.now
    Dim format As String = "MMdd"
    Dim YearFormat as string = "yyyy"
    Dim CurrentYear as string = time.ToString(YearFormat)
    dim CurrentDate as string = time.ToString(format)

	Dim AssembleyInFoFile as string = Host.ResolvePath("AssemblyInfoVersion.txt")
    try
    
        'If we cannot find the file, the revision number is set to zero,
        'so even if the file doesn't exists the generation will run anyway.
        'NOTE: we suppose we're not messing with the generated file
          dim s as string

        using f as new StreamReader(AssembleyInFoFile)
			while not f.EndOfStream()
			s  = f.ReadLine()
            'We're reading the previous revision number; in order to make the
            'code as simple as we can, we're just going to rewrite it on the first row, commented.
            'This is not elegant, but it's simple enough and quite effective.
			if integer.tryParse(s , revisionNumber) then Exit While
          
		  End While  

	revisionNumber += 1

        end using

    catch e as exception
         
        revisionNumber = 0 
    end try
				using Sw as new StreamWriter(AssembleyInFoFile)
					Sw.WriteLine(revisionNumber.ToString())
				end using
#>
'<#=revisionNumber#>
'' 
' This code was generated by a tool. Any changes made manually will be lost
' the next time this code is regenerated.
'' 
Imports System.Reflection


<Assembly: AssemblyInformationalVersion("2.19.PreAlpha <#= revisionNumber.ToString() #>")>
