<?xml version="1.0" encoding="utf-8"?>
<topic id="a9afd3a8-c2a2-47db-a975-8bbb8ea06eef" revisionNumber="1">
  <developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>Welcome to Silver Monkey. This Guide will help you Setup Silver Monkey and start 
      your first bot. While I'll keep the steps simple and basic as I can, You can contact me 
      on Furcadia as Gerolkae or send me an e-mail gerolkae@hotmail.com with any Questions Comments, 
      or Suggestions.</para>

      <para>Silver Money was designed and intended for users who have a basic understanding of 
      how Dragon Speak works on Furcadia. It's layed out simple and doesn't contain much "Bloat ware" 
      Providing just the essentials to make a bot and start with it.</para>

      <para>Now, onwards to the good stuff.</para>
    </introduction>

    <!-- <prerequisites><content>Optional prerequisites info</content></prerequisites> -->

    <!-- One or more procedure or section with procedure -->
    <procedure>
      <title>Getting started with Silver Monkey!</title>
      <steps class="ordered" >
        <step>
          <content>
            <para>First step we'll look at the New Bot Wizard. This wizard sets up all the 
            default settings for the bot file that are safe for a first time connection. On the File menu
          select New bot and lets get started.</para>
            <para>Fist Section is Basic Settings. Here we need a name for our bot. The Botname field is
            special. This will set the name for our botfile (*.bini) , our MonkeySpeak file (*.ms) and the
            default name for our log file (*.log). You want different names? Don't worry you can change 
            these settings later in the Bot Editor</para>
            <para>
              Next is File Location. This Tells the wizard  where to create the MonkeySpeak File
              (*.ms) and the  Bot File (*.bini). If this is left blank the files will be created in
              "Documents\Silver monkey". "Documents\Silver monkey" is default location for all user 
              specified files such as the SQLite Database file or the Member list file (explained in 
              another guide).</para>
            <para>
              Ok so we need to know what character to connect to Furcadia with. CharacterIni is 
              the field that tells Furcadia which character to open up. This Field default to 
              "Documents\Furcadia\Furcadia Characters\" unless  localdir.ini exists in the Furcadia
              Program Folder. If you don't know what localdir.ini is, don't worry about it. That will 
              be covered in another guide for advanced Users</para>
            <para>
              Last field in this section is the Bot Controller Name. This is a security feature that
              tells Silver Monkey Which Character on Furcadia will have the most control over the bot.
              Please see MemberList guide for an example of how this is used              
            </para>
            <para>
              Whew, That's some simple but important stuff for the bot. Click Next to continue to the
              next section.
            </para>
            <para>
              There's not much here. This section displays a list of options on where you want the bot
              to go on connection. Do you have a Private map to go to? Perhaps the bot is the uploader.
              What ever the case is, Algeria Island and Acropolis are bot safe maps for any bot to go to.
              Please see the Furcadia user Agreement for an explanation. If you prefer to go to the last
              map Visited or want to move the bot manually to a map, select "None". This tells the bot
              not to do anything
            </para>
            <para>
              When you're ready to generate the bot file click ok. If you miss any important settings, 
              that's ok because the wizard will catch the error and ask you to update that field. 
            </para>
            
              </content>
        </step>
        <step>
          <content>
            <para>In this step I'll cover the main settings that should be observed when creating a new bot. Open Options -> Config to open the main bot settings window.</para>
            <para>First thing we want here is Connection.. Server is the furcadia game server. Leave this as Lightbringer.furcadia.com. Server Port can be any Furcadia server Port but for now we'll leave it as 6500..</para>
            <para>Connection retries the number of retries to connect to furcadia is ok to leave as default.</para>
            <para>Throat Tired Pause Time saves Messages to Server and Doesn't send them till this amount of time is reached after the bot see's a "You're throat is tired" message.</para>
            <para>Keep Alive Ping Sends a Ping response to the server to keep the connection open... Mainly for Standalone Mode. Change this to a lower number if you loose connection frequently.</para>
            <para>Switch to the Client Optios Tab. If you find your self with Multiple Clients loading over the same connections Check AutoClose Client on Disconnect... This will close the Furcadia lient before launching a new one to connect with.</para>
            <para>Furcadia Directory Tells Silver Monkey which Client install to use but If this is Left Blank then the Default Client is used.</para>
          </content>
        </step>
        <step>
          <content>
            <para>Go to Windows -> MS Editor. This Will load the Defined MS Script or the bot or create a new one if it doesn't exist yet in side the Monkey Speak Editor</para>
            <para>Add the lines:</para>
            <code language="ms" title="MonkeySpeak">
              (0:34) When someone requests to join the bot,
                  (5:0) say {`summon}.
            </code>
            <para>This will create a Bot with Auto Summon capability.. it will summon the requesting Furre.</para>
          </content>
        </step>
        <step>
          <content>
            <para>Save this File and In the Bot main Window you're ready to Connect.. Press Go to Connect and watch you're first bot come to life.</para>
          </content>
        </step>
         </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>

   
    <!-- Optional next steps info
    <nextSteps>
      <content><para>Next steps info goes here</para></content>
    </nextSteps>
    -->

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
