Database Example:
Key Value pair Bot settings  for Single Bot database


Introduction:


Note: Silver Monkies Database system uses SQLite.. Most SQLIte commands are acpted... Silver Monkey is Greared to Types of TEXT or DOUBLE but will work with INTEGER types. You may have noticed thats the SQL keywords are all Capilolized. That's a standard  set by SQL in general and it Helps to stick with it  for readability. SQL Values can be put in as # for INTEGER or DOUBLE and 'text'  for TEXT based strings.

Note2: Monkey Speak Variables are special. Unlike Dragon Speak %Integer and ~string types, Both are combined in Monkey Speak as %Variable using String or Double types. As a result doing math comparasons. a%Variable containg the value of "string" will be process like %Variable "string" > 1  will work like "0" > 1 returning False

Databases in general are ways to store and recover data to  tables and rows in those tables... Tables are a group of data contained in rows. Everything this tutoriqal will cover is using the table "BotSettings" Group and Table are used synonously together. Data is stored in rows with collumn names or fields. Silver Monkey has a stack that stores the resultes of the Execute Query. Since INSERT, DELETE, or UPDATE statements don't return any useful information the stack is  cleared. But when we Execute a SELECT Query, Silver Monkey stores the recovered row into the stack allowing us to retrive variables.

Define a Table in the Database
(5:551) execute SQLite Database query {CREATE TABLE IF NOT EXISTS BotSettings (id INTEGER PRIMARY KEY, Setting TEXT,Value TEXT);}.

At bot startup We're creating a Table called "BotSettings" if it Don't Already Exist... This Table will have Columns ID (Generic marker tht specifies uniqeue Rows with an Auto Incrementing value. Setting Value... This is the Variable Name We'll be using. Value Is the Value of the Variable we want to  use. We can do the same thing for DreamSettings with things like DreamURL or DreamOwner. PhoenixSpeak Default settings can be stored this way as well. Note: Monkey Speak Variables are String or Double tyles. for this reason we're using the 'string' sysntax with the TEXT column type.  Monkey Speak Variables do the conversion internally. Once the table is created we canot change is except for adding new colums  of a specified type

It's reconmended we Prime our Variables with default Value at start up like So:
(5:551) execute SQLite Database query {INSERT OR REPLACE INTO BotSettings (Setting, Value)] VALUES (SettingName, 'SettingValue');}.

Insert the Variable into the table. If we want to reset the Value every time we'll add "OR REPLACE" like the Example. We're still using BotSettings table with  our example. SettingName will be the Variable Name we'll be using and SettingValue is the coresponding Value  for the Variable.

For other Variables we'll repeat this process for different Variable Names. the same thing can be done for a table called DreamSettings as mentioned earlier.

So this all cool and all.  Now what, How do we use this stuff? 

This is where the power of the database comes in.
Unless we're working with the Default Furre Table wich is built for folks familier with Phoenix Speak Ussage, Advanced ussage is based on "Execute SQL and retrieve variables" To store Variables we just execute the SQL statements and forget about the retrievale.


Ok we're familier with INSERT for setting up our default value. To keep them upto date we'll use the UPDATE statement during normal ussage off code to store our variables to the databse.

UPDATE table_name
SET column1 = value1, column2 = value2...., columnN = valueN
WHERE [condition];

table_name is the table we're working with "BotSettings". SET means we want to store data to our table. This by itself will update all records or rows in our table for each  colomn or field we specify. thats  why we use the WHERE condition. We want to store a variable to the table right?  So we include WHERE Setting = SettineName. This will restrict the data affected to the row we want. After that we just SET the Collumn names, Setting = 'SettingName', Value = 'SettingValue'

(5:551) execute SQLite Database query {UPDATE BotSettings SET Value = '%Variable" WHERE Setting = SettineName;}.

Yes we can use  Monkey Speak Variables %variable any where in a {string} section of a monkey Speak Line

The SQL sysntax standard for retrieving any variable from the database is
SELECT id, Setting, Value
FROM BotSettings
WHERE Setting = 'SettingName'
LIMIT 1, 0;

SELECT Means we want to capture  some data from the Database. Here we're choosing specific Collumns  that we want. Since we're calling Every Column on the table we could use * instead. FROM specifies wich Table we want. Here We're still using BotSettings. But we could go with DreamSettings. WHERE helps use find the specific row we want. If we know id we could call that instead, But here we have a collumn called Setting and we want the Variable SettingName. LIMIT is how many results (how many Rows in the table we want. The Stack is configured for  a single row at a time. So we define it with 1 Row with O offset.


Ok we already mentioned the standard process for retriving variables from the database if Execute Query with the SELECT statement and then we can retrieve our Variables from the recovered row. Consider this example:

(5:551) execute SQLite Database query {SELECT * FROM BotSettings WHERE Setting = 'SettingName' LIMIT 1, 0;}.
(5:552) retrieve field {id} from SQLite Database query and put it into variable %SettingID.
(5:552) retrieve field {Setting} from SQLite Database query and put it into variable %VariableName.
(5:552) retrieve field {Value} from SQLite Database query and put it into variable %VariableValue.

You can see we're still working with our BotSettings Table or Group of variables we want to use. Each Row have the Fields (Collumn Names) We selected with the "*" option here. Since we created the Table with id, Setting, and Value Collun Names they're all in our Sqlite Stack. All we need to do now is retrieve the columns we want to use Like the Setting Value like in "(5:552) retrieve field {Value} from SQLite Database query and put it into variable %VariableValue."

After a while the database will grow, We can help save space by cleaning up after ourselves. We can do two things, Delete rows we nolonger need and rebuild and clean the database every so often.

DELETE FROM table_name
WHERE [condition];
(5:551) execute SQLite Database query {DELETE FROM BotSettings WHERE Setting = 'SettingName';}.



